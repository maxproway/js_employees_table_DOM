{"mappings":"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AAuB,EACvB,sBAAuB,CACzB,GAAG,MAAM,CAAC,EACZ,CAmCA,SAAS,EAAgB,CAAM,CAAE,CAAY,CAAE,CAAQ,EACrD,IAAM,EAAQ,GAAY,CAEtB,AAAqB,CAAA,IAArB,EAAO,SAAS,CAClB,EAAO,SAAS,CAAG,EAAgB,GAEnC,EAAO,SAAS,CAAG,CAEvB,CA3TA,EAAK,gBAAgB,CAAC,SAmKtB,SAAwB,CAAC,EACvB,EAAE,cAAc,GAEhB,IAAM,EAAS,EAAE,CACX,EAAK,SAAS,aAAa,CAAC,MAE5B,EAAO,IAAI,SAAS,GAErB,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAsB,CAAA,CAAA,OAAA,QAAA,CAAA,GAAtB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAA4B,CAA5B,I,EAAA,G,EAAA,EAAA,KAAA,C,A,S,C,E,G,M,O,C,G,O,C,E,I,A,S,C,C,C,E,I,E,E,E,A,M,E,K,A,a,O,Q,C,C,O,Q,C,E,C,C,a,C,G,A,M,G,I,E,E,C,E,C,E,E,C,E,G,C,I,E,E,I,C,G,C,C,E,A,C,E,E,I,E,E,I,A,I,E,I,C,E,K,E,AAAA,I,E,M,E,E,C,G,C,M,E,C,E,C,E,E,C,Q,C,G,C,G,A,M,E,M,E,E,M,E,Q,C,G,E,M,C,C,C,O,E,E,EAAA,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,EAAA,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,EAAA,G,E,EAAA,I,A,W,M,A,U,6I,KAAO,EAAA,CAAA,CAAA,EAAA,CAAK,EAAZ,CAAA,CAAA,EAAA,CACG,EAAK,SAAS,aAAa,CAAC,MAElC,OAAQ,GACN,IAAK,OACH,EAAG,SAAS,CAAG,EAEX,EAAM,IAAI,GAAG,MAAM,CAAG,GACxB,EAAO,IAAI,CAAC,sCAEd,KAEF,KAAK,WACH,EAAG,SAAS,CAAG,EAEV,EAAM,IAAI,IACb,EAAO,IAAI,CAAC,qBA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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar styles = \"\\n  label {\\n    text-transform: capitalize;\\n  }\\n\\n  .notification {\\n    display: none;\\n    padding: 20px;\\n  }\\n\\n\\n  /* The Close Button */\\n  .close {\\n    color: #aaaaaa;\\n    float: right;\\n    font-size: 28px;\\n    font-weight: bold;\\n  }\\n\\n  .close:hover,\\n  .close:focus {\\n    color: #000;\\n    text-decoration: none;\\n    cursor: pointer;\\n  }\\n\";\nvar styleSheet = document.createElement(\"style\");\nstyleSheet.textContent = styles;\ndocument.head.appendChild(styleSheet);\ndocument.body.appendChild(createForm());\ndocument.body.appendChild(createModal());\nvar table = document.querySelector(\"table\");\nvar form = document.forms[0];\nform.addEventListener(\"submit\", addNewEmployee);\ntable.addEventListener(\"click\", function(e) {\n    switch(e.target.tagName){\n        case \"TH\":\n            sortTable(table, e.target);\n            break;\n        case \"TD\":\n            highlightRow(table, e.target);\n            break;\n    }\n});\ntable.addEventListener(\"dblclick\", function(e) {\n    switch(e.target.tagName){\n        case \"TD\":\n            editCell(e.target);\n            break;\n    }\n});\nfunction sortTable(tableNode, target) {\n    var sortDirection = target.dataset.sort === \"ASC\" ? \"DESC\" : \"ASC\";\n    target.parentNode.querySelectorAll(\"th\").forEach(function(element) {\n        delete element.dataset.sort;\n    });\n    target.dataset.sort = sortDirection;\n    var columnIndex = target.cellIndex;\n    var tableArray = Array.from(table.querySelector(\"tbody\").rows);\n    var sortedTableData;\n    if ([\n        3,\n        4\n    ].includes(columnIndex)) sortedTableData = tableArray.sort(function(a, b) {\n        var valueA = integerCleaner(a.cells[columnIndex].innerHTML);\n        var valueB = integerCleaner(b.cells[columnIndex].innerHTML);\n        if (sortDirection === \"ASC\") return valueA - valueB;\n        else return valueB - valueA;\n    });\n    else sortedTableData = tableArray.sort(function(a, b) {\n        var nameA = a.cells[columnIndex].innerHTML.toUpperCase();\n        var nameB = b.cells[columnIndex].innerHTML.toUpperCase();\n        if (sortDirection === \"ASC\") {\n            if (nameA < nameB) return -1;\n            if (nameA > nameB) return 1;\n        } else {\n            if (nameB < nameA) return -1;\n            if (nameB > nameA) return 1;\n        }\n    });\n    var tbody = document.querySelector(\"table tbody\");\n    tbody.innerHTML = \"\";\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = sortedTableData[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var rowData = _step.value;\n            var row = document.createElement(\"tr\");\n            for(var i = 0; i < table.rows[0].cells.length; i++){\n                var cell = document.createElement(\"td\");\n                cell.innerHTML = rowData.cells[i].innerHTML;\n                row.append(cell);\n            }\n            tbody.append(row);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n}\nfunction integerCleaner(value) {\n    return value.replace(/[\\s~`!@#$%^&*(){}[\\];:\"'<,.>?/\\\\|_+=-]/g, \"\");\n}\nfunction highlightRow(tableNode, target) {\n    tableNode.querySelectorAll(\"tbody tr\").forEach(function(e) {\n        return e.classList.remove(\"active\");\n    });\n    target.parentNode.classList.add(\"active\");\n}\nfunction createForm() {\n    var newForm = document.createElement(\"form\");\n    newForm.classList.add(\"new-employee-form\");\n    var fields = [\n        {\n            title: \"name\",\n            type: \"text\"\n        },\n        {\n            title: \"position\",\n            type: \"text\"\n        },\n        {\n            title: \"office\",\n            type: \"select\",\n            options: [\n                \"Tokyo\",\n                \"Singapore\",\n                \"London\",\n                \"New York\",\n                \"Edinburgh\",\n                \"San Francisco\"\n            ]\n        },\n        {\n            title: \"age\",\n            type: \"number\"\n        },\n        {\n            title: \"salary\",\n            type: \"number\"\n        }\n    ];\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = fields[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var field = _step.value;\n            var label = document.createElement(\"label\");\n            switch(field.type){\n                case \"text\":\n                case \"number\":\n                    label.innerHTML = \"\".concat(field.title, \": <input name='\").concat(field.title, \"' type='\").concat(field.type, \"' data-qa='\").concat(field.title, \"'> \");\n                    break;\n                case \"select\":\n                    var select = document.createElement(\"select\");\n                    select.name = field.title;\n                    select.required = true;\n                    select.dataset.qa = field.title;\n                    var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n                    try {\n                        for(var _iterator1 = field.options[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n                            var option = _step1.value;\n                            var opt = document.createElement(\"option\");\n                            opt.value = option;\n                            opt.innerHTML = option;\n                            select.appendChild(opt);\n                        }\n                    } catch (err) {\n                        _didIteratorError1 = true;\n                        _iteratorError1 = err;\n                    } finally{\n                        try {\n                            if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n                                _iterator1.return();\n                            }\n                        } finally{\n                            if (_didIteratorError1) {\n                                throw _iteratorError1;\n                            }\n                        }\n                    }\n                    label.prepend(\"\".concat(field.title, \":\"), select);\n            }\n            newForm.appendChild(label);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    var button = document.createElement(\"button\");\n    button.innerHTML = \"Save to table\";\n    newForm.appendChild(button);\n    return newForm;\n}\nfunction addNewEmployee(e) {\n    e.preventDefault();\n    var errors = [];\n    var tr = document.createElement(\"tr\");\n    var data = new FormData(form);\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var _step_value = _sliced_to_array(_step.value, 2), key = _step_value[0], value = _step_value[1];\n            var td = document.createElement(\"td\");\n            switch(key){\n                case \"name\":\n                    td.innerHTML = value;\n                    if (value.trim().length < 4) errors.push(\"Name should be at least 4 letters.\");\n                    break;\n                case \"position\":\n                    td.innerHTML = value;\n                    if (!value.trim()) errors.push(\"Position is Empty\");\n                    break;\n                case \"age\":\n                    td.innerHTML = value;\n                    if (value < 18 || value > 90) errors.push(\"Age should be between 18 and 90.\");\n                    break;\n                case \"salary\":\n                    td.innerHTML = convertToSalary(value);\n                    break;\n                default:\n                    td.innerHTML = value;\n            }\n            tr.appendChild(td);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    var notification = document.querySelector(\".notification\");\n    var title = document.querySelector(\".title\");\n    notification.classList.remove(\"error\", \"success\");\n    title.innerHTML = \"\";\n    if (errors.length === 0) {\n        notification.classList.add(\"success\");\n        title.innerHTML = \"Employee has been added!\";\n        table.querySelector(\"tbody\").appendChild(tr);\n        form.reset();\n    } else {\n        notification.classList.add(\"error\");\n        var errorsHTML = \"\";\n        var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n        try {\n            for(var _iterator1 = errors[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n                var error = _step1.value;\n                errorsHTML += \"<p>\".concat(error, \"</p>\");\n            }\n        } catch (err) {\n            _didIteratorError1 = true;\n            _iteratorError1 = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n                    _iterator1.return();\n                }\n            } finally{\n                if (_didIteratorError1) {\n                    throw _iteratorError1;\n                }\n            }\n        }\n        title.innerHTML = errorsHTML;\n    }\n    notification.appendChild(title);\n    notification.style.display = \"block\";\n}\nfunction createModal() {\n    var notification = document.createElement(\"div\");\n    notification.classList.add(\"notification\");\n    notification.dataset.qa = \"notification\";\n    var closeNotification = document.createElement(\"span\");\n    closeNotification.classList.add(\"close\");\n    closeNotification.innerHTML = \"&times;\";\n    closeNotification.addEventListener(\"click\", function(e) {\n        notification.style.display = \"none\";\n    });\n    var title = document.createElement(\"div\");\n    title.classList.add(\"title\");\n    notification.appendChild(closeNotification);\n    notification.appendChild(title);\n    return notification;\n}\nfunction convertToSalary(number) {\n    return new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0\n    }).format(number);\n}\nfunction editCell(target) {\n    var initialValue = integerCleaner(target.innerHTML);\n    var input = document.createElement(\"input\");\n    input.classList.add(\"cell-input\");\n    input.value = initialValue;\n    switch(target.cellIndex){\n        case 0:\n        case 1:\n            input.type = \"text\";\n            break;\n        case 3:\n        case 4:\n            input.type = \"number\";\n            break;\n    }\n    target.innerHTML = \"\";\n    target.appendChild(input);\n    input.addEventListener(\"keypress\", function(e) {\n        if (e.key === \"Enter\") updateCellValue(target, initialValue, input.value);\n    });\n    input.addEventListener(\"blur\", function(e) {\n        updateCellValue(target, initialValue, input.value);\n    });\n}\nfunction updateCellValue(target, initialValue, newValue) {\n    var value = newValue || initialValue;\n    if (target.cellIndex === 4) target.innerHTML = convertToSalary(value);\n    else target.innerHTML = value;\n}\n\n//# sourceMappingURL=index.51cf3941.js.map\n","'use strict';\n\nconst styles = `\n  label {\n    text-transform: capitalize;\n  }\n\n  .notification {\n    display: none;\n    padding: 20px;\n  }\n\n\n  /* The Close Button */\n  .close {\n    color: #aaaaaa;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n  }\n\n  .close:hover,\n  .close:focus {\n    color: #000;\n    text-decoration: none;\n    cursor: pointer;\n  }\n`;\n\nconst styleSheet = document.createElement('style');\n\nstyleSheet.textContent = styles;\ndocument.head.appendChild(styleSheet);\n\ndocument.body.appendChild(createForm());\ndocument.body.appendChild(createModal());\n\nconst table = document.querySelector('table');\nconst form = document.forms[0];\n\nform.addEventListener('submit', addNewEmployee);\n\ntable.addEventListener('click', (e) => {\n  switch (e.target.tagName) {\n    case 'TH':\n      sortTable(table, e.target);\n      break;\n\n    case 'TD':\n      highlightRow(table, e.target);\n      break;\n  }\n});\n\ntable.addEventListener('dblclick', (e) => {\n  switch (e.target.tagName) {\n    case 'TD':\n      editCell(e.target);\n      break;\n  }\n});\n\nfunction sortTable(tableNode, target) {\n  const sortDirection = target.dataset.sort === 'ASC' ? 'DESC' : 'ASC';\n\n  target.parentNode.querySelectorAll('th').forEach((element) => {\n    delete element.dataset.sort;\n  });\n\n  target.dataset.sort = sortDirection;\n\n  const columnIndex = target.cellIndex;\n  const tableArray = Array.from(table.querySelector('tbody').rows);\n\n  let sortedTableData;\n\n  if ([3, 4].includes(columnIndex)) {\n    sortedTableData = tableArray.sort((a, b) => {\n      const valueA = integerCleaner(a.cells[columnIndex].innerHTML);\n      const valueB = integerCleaner(b.cells[columnIndex].innerHTML);\n\n      if (sortDirection === 'ASC') {\n        return valueA - valueB;\n      } else {\n        return valueB - valueA;\n      }\n    });\n  } else {\n    sortedTableData = tableArray.sort((a, b) => {\n      const nameA = a.cells[columnIndex].innerHTML.toUpperCase();\n      const nameB = b.cells[columnIndex].innerHTML.toUpperCase();\n\n      if (sortDirection === 'ASC') {\n        if (nameA < nameB) {\n          return -1;\n        }\n\n        if (nameA > nameB) {\n          return 1;\n        }\n      } else {\n        if (nameB < nameA) {\n          return -1;\n        }\n\n        if (nameB > nameA) {\n          return 1;\n        }\n      }\n    });\n  }\n\n  const tbody = document.querySelector('table tbody');\n\n  tbody.innerHTML = '';\n\n  for (const rowData of sortedTableData) {\n    const row = document.createElement('tr');\n\n    for (let i = 0; i < table.rows[0].cells.length; i++) {\n      const cell = document.createElement('td');\n\n      cell.innerHTML = rowData.cells[i].innerHTML;\n      row.append(cell);\n    }\n    tbody.append(row);\n  }\n}\n\nfunction integerCleaner(value) {\n  return value.replace(/[\\s~`!@#$%^&*(){}[\\];:\"'<,.>?/\\\\|_+=-]/g, '');\n}\n\nfunction highlightRow(tableNode, target) {\n  tableNode\n    .querySelectorAll('tbody tr')\n    .forEach((e) => e.classList.remove('active'));\n  target.parentNode.classList.add('active');\n}\n\nfunction createForm() {\n  const newForm = document.createElement('form');\n\n  newForm.classList.add('new-employee-form');\n\n  const fields = [\n    { title: 'name', type: 'text' },\n    { title: 'position', type: 'text' },\n    {\n      title: 'office',\n      type: 'select',\n      options: [\n        'Tokyo',\n        'Singapore',\n        'London',\n        'New York',\n        'Edinburgh',\n        'San Francisco',\n      ],\n    },\n    { title: 'age', type: 'number' },\n    { title: 'salary', type: 'number' },\n  ];\n\n  for (const field of fields) {\n    const label = document.createElement('label');\n\n    switch (field.type) {\n      case 'text':\n      case 'number':\n        label.innerHTML = `${field.title}: <input name='${field.title}' type='${field.type}' data-qa='${field.title}'> `;\n        break;\n\n      case 'select':\n        const select = document.createElement('select');\n\n        select.name = field.title;\n        select.required = true;\n        select.dataset.qa = field.title;\n\n        for (const option of field.options) {\n          const opt = document.createElement('option');\n\n          opt.value = option;\n          opt.innerHTML = option;\n          select.appendChild(opt);\n        }\n\n        label.prepend(`${field.title}:`, select);\n    }\n\n    newForm.appendChild(label);\n  }\n\n  const button = document.createElement('button');\n\n  button.innerHTML = 'Save to table';\n\n  newForm.appendChild(button);\n\n  return newForm;\n}\n\nfunction addNewEmployee(e) {\n  e.preventDefault();\n\n  const errors = [];\n  const tr = document.createElement('tr');\n\n  const data = new FormData(form);\n\n  for (const [key, value] of data) {\n    const td = document.createElement('td');\n\n    switch (key) {\n      case 'name':\n        td.innerHTML = value;\n\n        if (value.trim().length < 4) {\n          errors.push('Name should be at least 4 letters.');\n        }\n        break;\n\n      case 'position':\n        td.innerHTML = value;\n\n        if (!value.trim()) {\n          errors.push('Position is Empty');\n        }\n        break;\n\n      case 'age':\n        td.innerHTML = value;\n\n        if (value < 18 || value > 90) {\n          errors.push('Age should be between 18 and 90.');\n        }\n        break;\n\n      case 'salary':\n        td.innerHTML = convertToSalary(value);\n        break;\n\n      default:\n        td.innerHTML = value;\n    }\n    tr.appendChild(td);\n  }\n\n  const notification = document.querySelector('.notification');\n\n  const title = document.querySelector('.title');\n\n  notification.classList.remove('error', 'success');\n\n  title.innerHTML = '';\n\n  if (errors.length === 0) {\n    notification.classList.add('success');\n\n    title.innerHTML = 'Employee has been added!';\n\n    table.querySelector('tbody').appendChild(tr);\n    form.reset();\n  } else {\n    notification.classList.add('error');\n\n    let errorsHTML = '';\n\n    for (const error of errors) {\n      errorsHTML += `<p>${error}</p>`;\n    }\n\n    title.innerHTML = errorsHTML;\n  }\n  notification.appendChild(title);\n\n  notification.style.display = 'block';\n}\n\nfunction createModal() {\n  const notification = document.createElement('div');\n\n  notification.classList.add('notification');\n  notification.dataset.qa = 'notification';\n\n  const closeNotification = document.createElement('span');\n\n  closeNotification.classList.add('close');\n  closeNotification.innerHTML = '&times;';\n\n  closeNotification.addEventListener('click', (e) => {\n    notification.style.display = 'none';\n  });\n\n  const title = document.createElement('div');\n\n  title.classList.add('title');\n\n  notification.appendChild(closeNotification);\n  notification.appendChild(title);\n\n  return notification;\n}\n\nfunction convertToSalary(number) {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n  }).format(number);\n}\n\nfunction editCell(target) {\n  const initialValue = integerCleaner(target.innerHTML);\n  const input = document.createElement('input');\n\n  input.classList.add('cell-input');\n  input.value = initialValue;\n\n  switch (target.cellIndex) {\n    case 0:\n    case 1:\n      input.type = 'text';\n      break;\n\n    case 3:\n    case 4:\n      input.type = 'number';\n      break;\n  }\n\n  target.innerHTML = '';\n  target.appendChild(input);\n\n  input.addEventListener('keypress', (e) => {\n    if (e.key === 'Enter') {\n      updateCellValue(target, initialValue, input.value);\n    }\n  });\n\n  input.addEventListener('blur', (e) => {\n    updateCellValue(target, initialValue, input.value);\n  });\n}\n\nfunction updateCellValue(target, initialValue, newValue) {\n  const value = newValue || initialValue;\n\n  if (target.cellIndex === 4) {\n    target.innerHTML = convertToSalary(value);\n  } else {\n    target.innerHTML = value;\n  }\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","notification","closeNotification","title","styleSheet","document","createElement","textContent","head","appendChild","body","createForm","newForm","classList","add","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","fields","type","options","Symbol","iterator","next","done","field","value","label","innerHTML","concat","select","name","required","dataset","qa","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","option","opt","err","return","prepend","button","addEventListener","e","style","display","table","querySelector","form","forms","integerCleaner","replace","convertToSalary","number","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","format","updateCellValue","target","initialValue","newValue","cellIndex","preventDefault","errors","tr","data","FormData","_step_value","_array_with_holes","isArray","_iterable_to_array_limit","_s","_e","_i","_arr","_n","_d","call","push","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","slice","constructor","from","test","_non_iterable_rest","TypeError","key","td","trim","remove","reset","errorsHTML","error","tagName","sortTable","tableNode","sortDirection","sort","parentNode","querySelectorAll","forEach","element","columnIndex","tableArray","rows","sortedTableData","includes","a","b","valueA","cells","valueB","nameA","toUpperCase","nameB","tbody","rowData","row","cell","append","editCell","input"],"version":3,"file":"index.51cf3941.js.map"}